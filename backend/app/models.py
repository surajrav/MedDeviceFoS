#!/usr/bin/env python3
# Author: Suraj Ravichandran
# 01/20/2024
# FoS for Intuitive Surgical
import datetime
import uuid
from typing import Optional
from pydantic import BaseModel, Field, ConfigDict


class PatientImage(BaseModel):
    img_uri: Optional[str] = Field(
        None,
        description="Path suffix for this patient's medical image. To fetch the image use as follows http://server_host/${img_uri}"
    )
    img_timestamp: Optional[datetime.datetime] = Field(
        None,
        description="ISO 8601 formatted timestamp indicating when the patient's medical image was taken"
    )


class PatientInput(BaseModel):
    first_name: str = Field(..., description="First name of the patient")
    last_name: str = Field(..., description="Last name of the patient")
    date_of_birth: datetime.date = Field(..., description="ISO 8601 formatted date of the patient's birth date")
    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "first_name": "Suraj",
                "last_name": "Ravichandran",
                "date_of_birth": "1986-09-18"
            }
        }
    )


class Patient(PatientInput):
    id: uuid.UUID = Field(default_factory=uuid.uuid4, alias="_id", description="Patient ID which is generated by the system")
    images: Optional[list[PatientImage]] = Field(None, description="List containing patient image uri and timestamp")

    model_config = ConfigDict(
        populate_by_name=True,
        json_schema_extra={
            "example": {
                "id": "6d9e588d-424a-4af5-a5e7-f34ba7f75006",
                "first_name": "Suraj",
                "last_name": "Ravichandran",
                "date_of_birth": "1986-09-18",
                "images": [
                    {
                        "img_uri": "patient-images/6d9e588d-424a-4af5-a5e7-f34ba7f75006/2024-01-23T12:05:30.148280Z.jpg",
                        "img_timestamp": "2024-01-23T12:05:30.148280Z"
                    },
                    {
                        "img_uri": "patient-images/6d9e588d-424a-4af5-a5e7-f34ba7f75006/2024-01-23T12:04:38.063506Z.jpg",
                        "img_timestamp": "2024-01-23T12:04:38.063506Z"
                    }
                ]
            }
        }
    )


class PatientList(BaseModel):
    id: uuid.UUID = Field(default_factory=uuid.uuid4, alias="_id", description="Patient ID which is generated by the system")
    first_name: str = Field(..., description="First name of the patient")
    last_name: str = Field(..., description="Last name of the patient")


class PatientCollection(BaseModel):
    """
    A container holding a list of `StudentModel` instances.

    This exists because providing a top-level array in a JSON response can be a [vulnerability](https://haacked.com/archive/2009/06/25/json-hijacking.aspx/)

    (see https://www.mongodb.com/developer/languages/python/python-quickstart-fastapi/)
    """
    patients: list[PatientList]
    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "patients": [
                    {
                        "id": "6d9e588d-424a-4af5-a5e7-f34ba7f75006",
                        "first_name": "Suraj",
                        "last_name": "Ravichandran"
                    }
                ]
            }
        }
    )
